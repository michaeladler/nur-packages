diff -rN -u old-hikari/include/hikari/output_config.h new-hikari/include/hikari/output_config.h
--- old-hikari/include/hikari/output_config.h	2023-08-25 15:34:26.826576890 +0200
+++ new-hikari/include/hikari/output_config.h	2023-08-25 15:34:26.826576890 +0200
@@ -22,6 +22,7 @@
   HIKARI_OPTION(background, char *);
   HIKARI_OPTION(background_fit, enum hikari_background_fit);
   HIKARI_OPTION(position, struct hikari_position_config);
+  HIKARI_OPTION(disable, bool);
 };
 
 void
@@ -38,5 +39,6 @@
 HIKARI_OPTION_FUNS(output, background, char *);
 HIKARI_OPTION_FUNS(output, background_fit, enum hikari_background_fit);
 HIKARI_OPTION_FUNS(output, position, struct hikari_position_config);
+HIKARI_OPTION_FUNS(output, disable, bool);
 
 #endif
diff -rN -u old-hikari/src/configuration.c new-hikari/src/configuration.c
--- old-hikari/src/configuration.c	2023-08-25 15:34:26.826576890 +0200
+++ new-hikari/src/configuration.c	2023-08-25 15:34:26.826576890 +0200
@@ -1427,6 +1427,14 @@
       }
 
       hikari_output_config_set_position(output_config, position);
+    } else if (!strcmp(key, "disable")) {
+        bool disable;
+        if (!ucl_object_toboolean_safe(cur, &disable)) {
+          fprintf(stderr,
+              "configuration error: could not parse \"output\" \"disable\"");
+          goto done;
+        }
+        hikari_output_config_set_disable(output_config, disable);
     } else {
       fprintf(stderr,
           "configuration error: unknown \"outputs\" configuration key \"%s\"\n",
@@ -1762,20 +1770,24 @@
               hikari_configuration, output->wlr_output->name);
 
       if (output_config != NULL) {
-        if (output_config->position.value.type ==
-            HIKARI_POSITION_CONFIG_TYPE_ABSOLUTE) {
-          int x = output_config->position.value.config.absolute.x;
-          int y = output_config->position.value.config.absolute.y;
-
-          if (output->geometry.x != x || output->geometry.y != y) {
-            hikari_output_move(output, x, y);
+        if (output_config->disable.value == true) {
+          hikari_output_disable(output);
+        } else {
+          if (output_config->position.value.type ==
+              HIKARI_POSITION_CONFIG_TYPE_ABSOLUTE) {
+            int x = output_config->position.value.config.absolute.x;
+            int y = output_config->position.value.config.absolute.y;
+
+            if (output->geometry.x != x || output->geometry.y != y) {
+              hikari_output_move(output, x, y);
+            }
           }
-        }
 
-        if (output_config->background.value != NULL) {
-          hikari_output_load_background(output,
-              output_config->background.value,
-              output_config->background_fit.value);
+          if (output_config->background.value != NULL) {
+            hikari_output_load_background(output,
+                output_config->background.value,
+                output_config->background_fit.value);
+          }
         }
       }
     }
diff -rN -u old-hikari/src/output_config.c new-hikari/src/output_config.c
--- old-hikari/src/output_config.c	2023-08-25 15:34:26.826576890 +0200
+++ new-hikari/src/output_config.c	2023-08-25 15:34:26.826576890 +0200
@@ -23,6 +23,7 @@
   hikari_output_config_init_background_fit(
       output_config, HIKARI_BACKGROUND_STRETCH);
   hikari_output_config_init_position(output_config, default_position);
+  hikari_output_config_init_disable(output_config, false);
 }
 
 void
diff -rN -u old-hikari/src/server.c new-hikari/src/server.c
--- old-hikari/src/server.c	2023-08-25 15:34:26.826576890 +0200
+++ new-hikari/src/server.c	2023-08-25 15:34:26.826576890 +0200
@@ -213,6 +213,17 @@
   assert(server == &hikari_server);
 
   struct wlr_output *wlr_output = data;
+
+  struct hikari_output_config *output_config =
+      hikari_configuration_resolve_output_config(
+          hikari_configuration, wlr_output->name);
+  if (output_config != NULL && output_config->disable.value) {
+#ifndef NDEBUG
+    printf("Ignoring output %s\n", wlr_output->name);
+#endif
+    return;
+  }
+
   struct hikari_output *output = hikari_malloc(sizeof(struct hikari_output));
 
   if (!wlr_output_init_render(
@@ -706,9 +717,13 @@
             hikari_configuration, wlr_output->name);
 
     if (output_config != NULL) {
-      hikari_output_load_background(output,
-          output_config->background.value,
-          output_config->background_fit.value);
+      if (output_config->disable.value == true) {
+        hikari_output_disable(output);
+      } else {
+        hikari_output_load_background(output,
+            output_config->background.value,
+            output_config->background_fit.value);
+      }
     }
 
 #ifdef HAVE_XWAYLAND
