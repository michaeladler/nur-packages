From 8b8b04d66ac812c75dd719d9d5049ceb04ee33fa Mon Sep 17 00:00:00 2001
From: Michael Adler <therisen06@gmail.com>
Date: Fri, 1 Oct 2021 08:44:05 +0200
Subject: [PATCH] Do not use venv

---
 coq/__main__.py | 82 ++++++-------------------------------------------
 1 file changed, 9 insertions(+), 73 deletions(-)

diff --git a/coq/__main__.py b/coq/__main__.py
index d6c3fdc1..bccf0c75 100644
--- a/coq/__main__.py
+++ b/coq/__main__.py
@@ -57,82 +57,18 @@ _IN_VENV = _RT_PY == _EXEC_PATH
 
 
 if command == "deps":
-    assert not _IN_VENV
-
-    try:
-        from venv import EnvBuilder
-
-        print("...", flush=True)
-        with redirect_stdout(StringIO()), redirect_stderr(StringIO()):
-            EnvBuilder(
-                system_site_packages=False,
-                with_pip=True,
-                upgrade=True,
-                symlinks=not IS_WIN,
-                clear=True,
-            ).create(_RT_DIR)
-    except (ImportError, CalledProcessError):
-        msg = "Please install python3-venv separately. (apt, yum, apk, etc)"
-        print(msg, file=stderr)
-        exit(1)
-    else:
-        proc = run(
-            (
-                _RT_PY,
-                "-m",
-                "pip",
-                "install",
-                "--upgrade",
-                "pip",
-            ),
-            cwd=TOP_LEVEL,
-            stdin=DEVNULL,
-            stderr=STDOUT,
-        )
-        if proc.returncode:
-            print("Installation failed, check :message", file=stderr)
-            exit(proc.returncode)
-        proc = run(
-            (
-                _RT_PY,
-                "-m",
-                "pip",
-                "install",
-                "--upgrade",
-                "--force-reinstall",
-                "--requirement",
-                str(REQUIREMENTS),
-            ),
-            cwd=TOP_LEVEL,
-            stdin=DEVNULL,
-            stderr=STDOUT,
-        )
-        if proc.returncode:
-            print("Installation failed, check :message", file=stderr)
-            exit(proc.returncode)
-        else:
-            _LOCK_FILE.write_text(_REQ)
-            msg = """
-            ---
-            You can now use :COQnow
-            """
-            print(dedent(msg), file=stderr)
+    msg = """
+    ---
+    You can now use :COQnow
+    """
+    print(dedent(msg), file=stderr)
 
 elif command == "run":
     try:
-        lock = _LOCK_FILE.read_text()
-    except Exception:
-        lock = ""
-    try:
-        if not _IN_VENV:
-            raise ImportError()
-        elif lock != _REQ:
-            raise ImportError()
-        else:
-            import pynvim
-            import pynvim_pp
-            import std2
-            import yaml
+        import pynvim
+        import pynvim_pp
+        import std2
+        import yaml
     except ImportError:
         msg = f"""
         Please update dependencies using :COQdeps
-- 
2.33.0

